{"version":3,"sources":["Heading.js","MetalMeta.js","Like.js","Band.js","BandSplit.js","BandList.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","MetalMeta","metalJson","require","bandCount","Object","keys","length","Like","props","state","count","onClick","setState","this","Component","Band","band_name","formed","origin","fans","split","BandList","bands","data","map","i","id","BandSplit","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kkNAceA,MAXf,WACE,OACE,qBAAKC,UAAU,QAAf,SACE,+BACE,0DACA,qDCOOC,MAXf,WACE,IAAMC,EAAYC,EAAQ,GACpBC,EAAYC,OAAOC,KAAKJ,GAAWK,OACzC,OACE,gCACE,0DACA,wCAAWH,S,4BCqBFI,G,wDA3Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAO,GAJQ,E,qDAQT,IAAD,OACP,OACE,sBAAKX,UAAU,OAAf,UACE,wBACEY,QAAS,WACP,EAAKC,SAAS,CAAEF,MAAO,EAAKD,MAAMC,MAAQ,KAF9C,0BAKA,6BAAKG,KAAKJ,MAAMC,QAChB,wBACEC,QAAS,WACP,EAAKC,SAAS,CAAEF,MAAO,EAAKD,MAAMC,MAAQ,KAF9C,iC,GAlBWI,c,KCcJC,MAbf,SAAcP,GAAQ,IACZQ,EAAoCR,EAApCQ,UAAWC,EAAyBT,EAAzBS,OAAQC,EAAiBV,EAAjBU,OAAQC,EAASX,EAATW,KACnC,OACE,sBAAKpB,UAAU,OAAf,UACE,6BAAKiB,IACL,yCAAYC,KACZ,4BAAIC,IACJ,uCAAUC,KACV,cAAC,EAAD,QCKSJ,MAbf,SAAcP,GAAQ,IACZQ,EAA2CR,EAA3CQ,UAAWC,EAAgCT,EAAhCS,OAAQC,EAAwBV,EAAxBU,OAAQC,EAAgBX,EAAhBW,KAAMC,EAAUZ,EAAVY,MACzC,OACE,sBAAKrB,UAAU,OAAf,UACE,6BAAKiB,IACL,yCAAYC,KACZ,4BAAIC,IACJ,uCAAUC,KACV,4BAAG,wCAAWC,W,aC4BLC,MAlCf,WACE,IAAMC,EAAQC,EAAKC,KAAI,WAA8CC,GAAO,IAAjDT,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAC1D,MAAc,MAAVA,EAEA,cAAC,EAAD,CACEM,GAAID,EAEJT,UAAWA,EACXC,OAAQA,EACRC,OAAQA,EACRC,KAAMA,GAJDH,GASP,cAACW,EAAD,CACED,GAAID,EAEJT,UAAWA,EACXC,OAAQA,EACRC,OAAQA,EACRC,KAAMA,EACNC,MAAOA,GALFJ,MAUb,OACE,qBAAKjB,UAAU,WAAf,SACIuB,KCpBOM,MAVf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCES8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.db0e7252.chunk.js","sourcesContent":["import React from 'react';\nimport './Heading.css';\n\nfunction Title() {\n  return (\n    <div className=\"Title\">\n      <ul>\n        <li>FEW 1.2 Final Assessment</li>\n        <li>Chudier Chuol</li>\n    </ul>\n    </div>\n  )\n}\n\nexport default Title","\nimport React from 'react';\n\n\nfunction MetalMeta() {\n  const metalJson = require('./metal.json');\n  const bandCount = Object.keys(metalJson).length;\n  return (\n    <div>\n      <h3>Metal Bands ü§ò</h3>\n      <p>Bands: {bandCount}</p>\n    </div>\n  )\n}\n\nexport default MetalMeta;","import React, { Component } from 'react';\nimport './Like.css'\n\nclass Like extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      count: 0\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Like\">\n        <button\n          onClick={() => {\n            this.setState({ count: this.state.count - 1  })\n          }}\n        >üëé</button>\n        <h1>{this.state.count}</h1>\n        <button\n          onClick={() => {\n            this.setState({ count: this.state.count + 1 })\n          }}\n        >üëç</button>\n      </div>\n    )\n  }\n}\n\nexport default Like;","import React from 'react';\nimport Like from './Like';\nimport './Band.css';\n\nfunction Band(props) {\n  const { band_name, formed, origin, fans } = props;\n  return (\n    <div className=\"Band\">\n      <h1>{band_name}</h1>\n      <p>Formed: {formed}</p>\n      <p>{origin}</p>\n      <p>Fans: {fans}</p>\n      <Like />\n    </div>\n  )\n}\n\nexport default Band;","\nimport React from 'react';\nimport './Band.css';\n\nfunction Band(props) {\n  const { band_name, formed, origin, fans, split } = props;\n  return (\n    <div className=\"Band\">\n      <h1>{band_name}</h1>\n      <p>Formed: {formed}</p>\n      <p>{origin}</p>\n      <p>Fans: {fans}</p>\n      <p><b>Split: {split}</b></p>\n    </div>\n  )\n}\n\nexport default Band;","import React from 'react';\nimport Band from './Band';\nimport BandSplit from './BandSplit';\nimport data from './metal.json';\nimport './BandList.css';\n\nfunction BandList() {\n  const bands = data.map(( { band_name, formed, origin, fans, split }, i) => {\n    if (split === '-') {\n      return (\n        <Band\n          id={i}\n          key={band_name}\n          band_name={band_name}\n          formed={formed}\n          origin={origin}\n          fans={fans}\n        />\n      )\n    } else {\n      return (\n        <BandSplit\n          id={i}\n          key={band_name}\n          band_name={band_name}\n          formed={formed}\n          origin={origin}\n          fans={fans}\n          split={split}\n        />\n      )\n    }\n  })\n  return (\n    <div className=\"BandList\">\n      { bands }\n    </div>\n  )\n}\n\nexport default BandList;","import './App.css';\nimport Heading from './Heading';\nimport MetalMeta from './MetalMeta';\nimport BandList from './BandList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Heading />\n      <MetalMeta />\n      <BandList />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}